// <auto-generated />
using System;
using HireManagment.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HireManagment.Persistence.Migrations
{
    [DbContext(typeof(HireManagmentDbContext))]
    partial class HireManagmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HireManagment.Domain.AdminApi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "bd0043b2-72fc-4dbd-927c-5d8d29f6650f",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Robert",
                            LastName = "Wade",
                            LockoutEnabled = false,
                            NormalizedEmail = "RODRIGOVALLADARES1@GMAIL.COM",
                            PasswordHash = "P@ssword1",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e1240412-5d10-4d15-9a0d-12e60d0ba6b5",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "8c48ec46-6c47-4509-82e9-7b2f3a6c3664",
                            Email = "rodrigovalladares@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Felix",
                            LastName = "Feliz",
                            LockoutEnabled = false,
                            NormalizedEmail = "RODRIGOVALLADARES@GMAIL.COM",
                            PasswordHash = "P@ssword2",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "feaa3ad9-bef1-4f2f-b916-12aa9be0177d",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Candidate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "fcafee69-f0df-4cf2-8df0-bbfffd45c86a",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Omar",
                            LastName = "Strange",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEF1NhaNf9Hxqmm5dvakedkZRo7siYHM5CqVDWsHCc9ZlxIW/HIcriADVzAi0ltf7Zw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7278de99-f87e-43fd-918d-f16d41152953",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "05d325f1-b2f3-45d7-8955-6fcc84a11908",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ruben",
                            LastName = "Dario",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEK8tWdUnK0mdq9FtmcNCTS4+EEuay0avZ+UYz6KcJIdJlZ4NUplily2QWVihcGwyIA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3dbfec05-39b2-483d-aa09-c66f9c010558",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "address",
                            AdminId = "1",
                            Description = "company 1",
                            Name = "Naughty Dog"
                        },
                        new
                        {
                            Id = 2,
                            Address = "address",
                            AdminId = "2",
                            Description = "company 2",
                            Name = "Riot Games"
                        },
                        new
                        {
                            Id = 3,
                            Address = "address",
                            AdminId = "2",
                            Description = "company 3",
                            Name = "Miami Heat"
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.CompanyEmployee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyEmployees");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 1,
                            ConcurrencyStamp = "47406352-21b8-4428-b275-ce7e10be08d2",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Henry",
                            LastName = "Walas",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEE33HJJmO1XHufC3DShs63JkU4AcEqt1NGKnFPzvRY9vniAxBEzab1L49aC48XCTYQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "79a290f6-b20d-478b-963d-e38b2d051cda",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 1,
                            ConcurrencyStamp = "5acdec28-5681-4409-9ab3-731a5bf4b36b",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 2,
                            FirstName = "Brook",
                            LastName = "Bane",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEHQ/nFvtAhmMUnV68C9sXYVRXTUHn7NmP+mAw8/WBZFGu7SnaYT5jk0MOqoIU3o87A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3cc5a908-924b-46bc-9fb8-fee4537e1834",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 2,
                            ConcurrencyStamp = "16af50ab-d3e2-4eba-9116-7c3a9c81f7bc",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Harry",
                            LastName = "Stevens",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEG5bEpBjwgaXiRWgc5UBJr3mYHxc03qWcs3+upD1c/qJN8tyixNdbwA37AuSnkL3GA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "34f89b8e-3313-408d-8574-189ecc084dae",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 3,
                            ConcurrencyStamp = "d5831544-ce92-412d-aa55-d62bd1a15319",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Alfonse",
                            LastName = "Elric",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAENr8FE3CyfB0L9OBkC4UXJHwwPZCeZ4xTXWXzZ0dtvQORsW5ue3tg24PaR4w5lp15Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "04dfab9a-a628-46e5-b8fb-06450d243be6",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Opening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpeningType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyEmployeeId");

                    b.ToTable("Openings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyEmployeeId = "1",
                            DateCreated = new DateTime(2022, 9, 7, 13, 11, 38, 644, DateTimeKind.Local).AddTicks(6457),
                            DateExpiration = new DateTime(2022, 9, 17, 13, 11, 38, 644, DateTimeKind.Local).AddTicks(6471),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.",
                            OpeningType = 1,
                            Title = "New Vancancy"
                        },
                        new
                        {
                            Id = 2,
                            CompanyEmployeeId = "3",
                            DateCreated = new DateTime(2022, 9, 7, 13, 11, 38, 644, DateTimeKind.Local).AddTicks(6476),
                            DateExpiration = new DateTime(2022, 10, 2, 13, 11, 38, 644, DateTimeKind.Local).AddTicks(6476),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.",
                            OpeningType = 1,
                            Title = "New Vancancy 2"
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.OpeningApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateApplication")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("CompanyEmployeeId");

                    b.ToTable("OpeningApplications");
                });

            modelBuilder.Entity("HireManagment.Domain.Company", b =>
                {
                    b.HasOne("HireManagment.Domain.AdminApi", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("HireManagment.Domain.CompanyEmployee", b =>
                {
                    b.HasOne("HireManagment.Domain.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HireManagment.Domain.Opening", b =>
                {
                    b.HasOne("HireManagment.Domain.CompanyEmployee", "CompanyEmployee")
                        .WithMany()
                        .HasForeignKey("CompanyEmployeeId");

                    b.Navigation("CompanyEmployee");
                });

            modelBuilder.Entity("HireManagment.Domain.OpeningApplication", b =>
                {
                    b.HasOne("HireManagment.Domain.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId");

                    b.HasOne("HireManagment.Domain.CompanyEmployee", "CompanyEmployee")
                        .WithMany()
                        .HasForeignKey("CompanyEmployeeId");

                    b.Navigation("Candidate");

                    b.Navigation("CompanyEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
