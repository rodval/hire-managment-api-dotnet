// <auto-generated />
using System;
using HireManagment.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HireManagment.Persistence.Migrations
{
    [DbContext(typeof(HireManagmentDbContext))]
    [Migration("20220910223704_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HireManagment.Domain.AdminApi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "3ad6dc80-5a57-4dbb-bd4a-ace2950d6ea7",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Robert",
                            LastName = "Wade",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEESpbwMJnE3MgeJLiNAr+a4+9Y/mOUZct4hsAeISiZvTQNBjO+uBQrEqkBdf2ZMkHA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8d20d7b9-2ede-41b0-a305-c877052214e8",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "f7ab29ec-1f2b-4695-a3c6-28ac27375902",
                            Email = "rodrigovalladares@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Felix",
                            LastName = "Feliz",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEGFggnwh1al3lICNhF/S2y7x3nWmRa0/K+0ZqE9F4x83QaQDVvOZ/F+IdMfFC3lqYQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11aa3d4e-535f-443e-9326-909cf5ef8a10",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Candidate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "c213e679-0fcf-48a4-9ccb-0d01b0b5f799",
                            Email = "rodrigovalladare1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Omar",
                            LastName = "Strange",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEFJJBn9noHpkIiAMyk7Zgaw5vM8MlZvW30jFKbexsosA30AF8opOk+mt1Z/tbJbgcg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "874f8260-20df-44e2-aada-5e5f3343ef74",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "c745fc44-37b0-457f-9680-578123478ff9",
                            Email = "candidate2@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ruben",
                            LastName = "Dario",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEB4sLr0KjXX1K/N56Fgf64PxPi9jyPk2xnRCO5UGQygyxC0zS8V/6I+ldN3WigYxPg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "321ff1f6-a6d9-4d22-b6d4-12e1417583fc",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "address",
                            AdminId = "1",
                            Description = "company 1",
                            Name = "Naughty Dog"
                        },
                        new
                        {
                            Id = 2,
                            Address = "address",
                            AdminId = "2",
                            Description = "company 2",
                            Name = "Riot Games"
                        },
                        new
                        {
                            Id = 3,
                            Address = "address",
                            AdminId = "2",
                            Description = "company 3",
                            Name = "Miami Heat"
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.CompanyEmployee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyEmployees");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 1,
                            ConcurrencyStamp = "ab5ea0c9-c79b-40be-967e-59f7cbb666a9",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Henry",
                            LastName = "Walas",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEIskeea3rhyHOx3rD1dcvkZ/1/yumTpraGsX6JYz98kAqFpJFd/K7XcaqxSsEkrvQw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c380c42a-b5c2-478d-b730-b44709aaa17f",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 1,
                            ConcurrencyStamp = "18f5ab04-1c23-4e6c-ab45-8b258188b7ad",
                            Email = "employee2@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 2,
                            FirstName = "Brook",
                            LastName = "Bane",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAENe4+rJGEcVdlbldyN5umnXLGBHEmfN8BZ46gZiZ3pYZIVfuS0nvXocEWLV2e1qw4g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a7c28d61-4c39-41bb-8d9b-59417be575be",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 2,
                            ConcurrencyStamp = "87d0e968-e8df-4361-ab64-71cae6f2a5f4",
                            Email = "employee3@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Harry",
                            LastName = "Stevens",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEFHbJP87ldu7PFDIJhzDGit1/oYLS0nHlAk26z7wsLnJWqyX43QX22hBFWI0jS77xg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8e237d02-a9b5-4280-aab9-3921c0cce11e",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 3,
                            ConcurrencyStamp = "53552135-5a67-4fe6-8a0f-f704a6f511d4",
                            Email = "employee4@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Alfonse",
                            LastName = "Elric",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEEy/1azTnM727xJxVv2GqKKCMlm3jLMJDwC1P03+jsqOU53nOvz+k9Vty+rr2q9OQA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ceea3ff2-56d3-4e94-92ee-800f9d8323bb",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Opening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpeningType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyEmployeeId");

                    b.ToTable("Openings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyEmployeeId = "1",
                            DateCreated = new DateTime(2022, 9, 10, 16, 37, 4, 494, DateTimeKind.Local).AddTicks(6865),
                            DateExpiration = new DateTime(2022, 9, 20, 16, 37, 4, 494, DateTimeKind.Local).AddTicks(6878),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.",
                            OpeningType = 1,
                            Title = "New Vancancy"
                        },
                        new
                        {
                            Id = 2,
                            CompanyEmployeeId = "3",
                            DateCreated = new DateTime(2022, 9, 10, 16, 37, 4, 494, DateTimeKind.Local).AddTicks(6890),
                            DateExpiration = new DateTime(2022, 10, 5, 16, 37, 4, 494, DateTimeKind.Local).AddTicks(6890),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.",
                            OpeningType = 1,
                            Title = "New Vancancy 2"
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.OpeningApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateApplication")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("CompanyEmployeeId");

                    b.ToTable("OpeningApplications");
                });

            modelBuilder.Entity("HireManagment.Domain.Company", b =>
                {
                    b.HasOne("HireManagment.Domain.AdminApi", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("HireManagment.Domain.CompanyEmployee", b =>
                {
                    b.HasOne("HireManagment.Domain.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HireManagment.Domain.Opening", b =>
                {
                    b.HasOne("HireManagment.Domain.CompanyEmployee", "CompanyEmployee")
                        .WithMany()
                        .HasForeignKey("CompanyEmployeeId");

                    b.Navigation("CompanyEmployee");
                });

            modelBuilder.Entity("HireManagment.Domain.OpeningApplication", b =>
                {
                    b.HasOne("HireManagment.Domain.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId");

                    b.HasOne("HireManagment.Domain.CompanyEmployee", "CompanyEmployee")
                        .WithMany()
                        .HasForeignKey("CompanyEmployeeId");

                    b.Navigation("Candidate");

                    b.Navigation("CompanyEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
