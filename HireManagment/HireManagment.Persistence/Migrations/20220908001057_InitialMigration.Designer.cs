// <auto-generated />
using System;
using HireManagment.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HireManagment.Persistence.Migrations
{
    [DbContext(typeof(HireManagmentDbContext))]
    [Migration("20220908001057_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HireManagment.Domain.AdminApi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "8b63f52b-8035-4f05-be06-a6fabd89a002",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Robert",
                            LastName = "Wade",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEAfF8Ig3E7SyzAAlrx4V6SwF6PM0NCPv8wedWlJ0/uKS2TBuISmIaMBGPue29Ia14g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a1745f8c-c19b-41ab-9357-3e6e4bf546e7",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "159d3c40-1245-4f49-b175-f793ffa7af68",
                            Email = "rodrigovalladares@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Felix",
                            LastName = "Feliz",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEEnjbYESGA2s935hnNhLBEcNvpwHYq0y2/tDvzfewV/dEImF4J3+cr762rrVFp2ZZw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "19b38104-0006-4af8-990b-7b833e7ae6e1",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Candidate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "3d64497d-705a-45d3-8e00-ff1d39615cb2",
                            Email = "rodrigovalladare1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Omar",
                            LastName = "Strange",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEHGIsp1AETTRwaeq+D8HRyZqTlnlcX/bkqQhlrGNRLjRydz9clfKTyO1R4zZfm6dzg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "36b97b6e-6b56-40b9-a7e5-409d421b2805",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "99f02d72-0371-498f-a9b7-3ccf2628605d",
                            Email = "candidate2@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ruben",
                            LastName = "Dario",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEE3UuidZpDc4BXEdslQ7i+NXeRkpsVRPW4hOe9oNlh2oMaafWWoyPyYHJ0mPCBqPeA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2ddc38a3-134e-4988-b6eb-f9830b934edf",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "address",
                            AdminId = "1",
                            Description = "company 1",
                            Name = "Naughty Dog"
                        },
                        new
                        {
                            Id = 2,
                            Address = "address",
                            AdminId = "2",
                            Description = "company 2",
                            Name = "Riot Games"
                        },
                        new
                        {
                            Id = 3,
                            Address = "address",
                            AdminId = "2",
                            Description = "company 3",
                            Name = "Miami Heat"
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.CompanyEmployee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyEmployees");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 1,
                            ConcurrencyStamp = "5ac94066-9b30-45a6-81d0-42043987813a",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Henry",
                            LastName = "Walas",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEGNplMb3wsT6/R9PM5psA3b5TCx7aDLtvcY0bLJxO5AFdIpkqtxwaQbSuvfqdNlfbw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ac84606c-e8a0-4f5e-a942-53dd4d1166ba",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 1,
                            ConcurrencyStamp = "5c1ab5c9-84eb-40ad-9859-e39758cf1384",
                            Email = "employee2@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 2,
                            FirstName = "Brook",
                            LastName = "Bane",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEI64hA5LqcYyL//pICw7ANbebxFNU/IQoxy4j0dRd+fOE24+ICBDi3/whgXtJ+i0Pg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0de9452f-8c28-49cc-9de5-25b18821821e",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 2,
                            ConcurrencyStamp = "83f3ad9c-c586-4751-b28a-2cd58850406a",
                            Email = "employee3@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Harry",
                            LastName = "Stevens",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAENLCS+KVb+Lf019Cs94UXBD0ye/fCeWdn/cnr69Ujk6W3FMHRU/uG02ZFpB/vQ26jQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a1a65ab2-a6da-4b2d-bf96-ac181defa5fc",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 3,
                            ConcurrencyStamp = "0e32f1ab-dc22-4027-85b4-2e062d03edb6",
                            Email = "employee4@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Alfonse",
                            LastName = "Elric",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEOP/ew46HKKrQdfl9iRD6ECcnDbfJkYmGo0t4n97dgM8oTzl2TMqca8ChRq3yLFj4Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3b377a9d-ee26-41a8-aeba-d206ff782226",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Opening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpeningType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyEmployeeId");

                    b.ToTable("Openings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyEmployeeId = "1",
                            DateCreated = new DateTime(2022, 9, 7, 18, 10, 56, 780, DateTimeKind.Local).AddTicks(9004),
                            DateExpiration = new DateTime(2022, 9, 17, 18, 10, 56, 780, DateTimeKind.Local).AddTicks(9017),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.",
                            OpeningType = 1,
                            Title = "New Vancancy"
                        },
                        new
                        {
                            Id = 2,
                            CompanyEmployeeId = "3",
                            DateCreated = new DateTime(2022, 9, 7, 18, 10, 56, 780, DateTimeKind.Local).AddTicks(9023),
                            DateExpiration = new DateTime(2022, 10, 2, 18, 10, 56, 780, DateTimeKind.Local).AddTicks(9024),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.",
                            OpeningType = 1,
                            Title = "New Vancancy 2"
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.OpeningApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateApplication")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("CompanyEmployeeId");

                    b.ToTable("OpeningApplications");
                });

            modelBuilder.Entity("HireManagment.Domain.Company", b =>
                {
                    b.HasOne("HireManagment.Domain.AdminApi", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("HireManagment.Domain.CompanyEmployee", b =>
                {
                    b.HasOne("HireManagment.Domain.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HireManagment.Domain.Opening", b =>
                {
                    b.HasOne("HireManagment.Domain.CompanyEmployee", "CompanyEmployee")
                        .WithMany()
                        .HasForeignKey("CompanyEmployeeId");

                    b.Navigation("CompanyEmployee");
                });

            modelBuilder.Entity("HireManagment.Domain.OpeningApplication", b =>
                {
                    b.HasOne("HireManagment.Domain.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId");

                    b.HasOne("HireManagment.Domain.CompanyEmployee", "CompanyEmployee")
                        .WithMany()
                        .HasForeignKey("CompanyEmployeeId");

                    b.Navigation("Candidate");

                    b.Navigation("CompanyEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
