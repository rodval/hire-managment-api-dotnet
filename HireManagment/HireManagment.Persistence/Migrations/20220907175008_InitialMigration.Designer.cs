// <auto-generated />
using System;
using HireManagment.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HireManagment.Persistence.Migrations
{
    [DbContext(typeof(HireManagmentDbContext))]
    [Migration("20220907175008_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HireManagment.Domain.AdminApi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "1f76d559-2687-49bc-9005-6e2779760be9",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Robert",
                            LastName = "Wade",
                            LockoutEnabled = false,
                            NormalizedEmail = "RODRIGOVALLADARES1@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEN97q9dEcZEDv936tnAmuAmQlaFlZfyZjNlpNhcpIklb4wLkZq3VyTctdJkmPvP8qQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4b5c0945-ed4b-48f9-b0cc-aff93b5f1ae4",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "512eab08-3a85-481a-9dac-fad5d81f0cc0",
                            Email = "rodrigovalladares@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Felix",
                            LastName = "Feliz",
                            LockoutEnabled = false,
                            NormalizedEmail = "RODRIGOVALLADARES@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEA7VZu3mtXCt7woOgBsXk/GJ8/wUF7iUDX8kDWmYBzZNfvKQIRWouPy2ICoSwUWpcg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "61f014af-ba87-4188-9bfb-480f3907894a",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Candidate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "f6f5f584-ad5d-4412-bb28-7abf1a91c64c",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Omar",
                            LastName = "Strange",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEHbbemvGYxZBwMhYWURMAeuT4eYAjmuV1VfrpDbdC6ogalTgKhGOIwgWq6WUgMfSCA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2d2dde7a-c87c-413b-8749-5a4b42184ec0",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            ConcurrencyStamp = "7bce37d2-fd72-4b5c-8c1c-2de9914807c7",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ruben",
                            LastName = "Dario",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEENbA9mcPykBAEh+OJOQ2LstU8rvzk/MNz9mKEYCtaG0Djw/UWKiPfRnZkwzYNCWjw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7b6bd382-6d17-47d4-b71b-a2da193ad13f",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "address",
                            AdminId = "1",
                            Description = "company 1",
                            Name = "Naughty Dog"
                        },
                        new
                        {
                            Id = 2,
                            Address = "address",
                            AdminId = "2",
                            Description = "company 2",
                            Name = "Riot Games"
                        },
                        new
                        {
                            Id = 3,
                            Address = "address",
                            AdminId = "2",
                            Description = "company 3",
                            Name = "Miami Heat"
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.CompanyEmployee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyEmployees");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 1,
                            ConcurrencyStamp = "4ab45ec9-ad90-41c7-8fc3-85193824e097",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Henry",
                            LastName = "Walas",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAENQQMLDzADpifLoJc+Pi0Rgw20xjSL8SQoHUKA77szYLqdai/2OUrB2UuiJHBtdwYg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63e00e9a-e074-4f6b-917a-1477eb0d927f",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 1,
                            ConcurrencyStamp = "2b115c83-89c8-448b-aec1-65eb3c864fb0",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 2,
                            FirstName = "Brook",
                            LastName = "Bane",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEN1ErhleWe1TEpiyCBYP2NGsPJK2onlrXTqSrGVCqywNy1748KlFx6SGhUyuTjZuzA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a817960f-0cab-448a-89bf-7f142c6cdc77",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 2,
                            ConcurrencyStamp = "c22532f9-ceb7-4591-8bcf-c80ae20bb27b",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Harry",
                            LastName = "Stevens",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEJJ3QkqnVkkr61a4m5pmLZP9o+yu3k78Egc4yxQvCPtJYWRvPLie+MrXP27Ut04WfQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e84df656-0880-4c4b-b68c-d52603070305",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            Age = 32,
                            CompanyId = 3,
                            ConcurrencyStamp = "e841f60f-2680-4944-b9d2-02ca05ef9b06",
                            Email = "rodrigovalladares1@gmail.com",
                            EmailConfirmed = false,
                            EmployeeType = 1,
                            FirstName = "Alfonse",
                            LastName = "Elric",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEA7W3Kw0zpMFlLLPOMNOgQT9AmFzWNT9VW9q5R9NDifk3NIxXdHm/n+n87TPI7Xh4w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c133f61d-ce8a-467e-b51a-eb085905be98",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.Opening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpeningType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyEmployeeId");

                    b.ToTable("Openings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyEmployeeId = "1",
                            DateCreated = new DateTime(2022, 9, 7, 11, 50, 8, 63, DateTimeKind.Local).AddTicks(4608),
                            DateExpiration = new DateTime(2022, 9, 17, 11, 50, 8, 63, DateTimeKind.Local).AddTicks(4625),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.",
                            OpeningType = 1,
                            Title = "New Vancancy"
                        },
                        new
                        {
                            Id = 2,
                            CompanyEmployeeId = "3",
                            DateCreated = new DateTime(2022, 9, 7, 11, 50, 8, 63, DateTimeKind.Local).AddTicks(4630),
                            DateExpiration = new DateTime(2022, 10, 2, 11, 50, 8, 63, DateTimeKind.Local).AddTicks(4631),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.",
                            OpeningType = 1,
                            Title = "New Vancancy 2"
                        });
                });

            modelBuilder.Entity("HireManagment.Domain.OpeningApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CandidateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateApplication")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("CompanyEmployeeId");

                    b.ToTable("OpeningApplications");
                });

            modelBuilder.Entity("HireManagment.Domain.Company", b =>
                {
                    b.HasOne("HireManagment.Domain.AdminApi", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("HireManagment.Domain.CompanyEmployee", b =>
                {
                    b.HasOne("HireManagment.Domain.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HireManagment.Domain.Opening", b =>
                {
                    b.HasOne("HireManagment.Domain.CompanyEmployee", "CompanyEmployee")
                        .WithMany()
                        .HasForeignKey("CompanyEmployeeId");

                    b.Navigation("CompanyEmployee");
                });

            modelBuilder.Entity("HireManagment.Domain.OpeningApplication", b =>
                {
                    b.HasOne("HireManagment.Domain.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId");

                    b.HasOne("HireManagment.Domain.CompanyEmployee", "CompanyEmployee")
                        .WithMany()
                        .HasForeignKey("CompanyEmployeeId");

                    b.Navigation("Candidate");

                    b.Navigation("CompanyEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
